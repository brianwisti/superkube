// =Input
input,
select,
textarea,
.input {
    // generate
    @include generate-type(input);
    @include generate-colors(input);

    // vars
    --input-border-radius: var(--radius-base);
    --input-padding: 0.3em 0.5em;
    --input-border-width: 1px;
    --input-border-style: solid;
    --input-box-shadow: none;
    --input-height: auto;
    --input-select-toggle: url('data:image/svg+xml;utf8,<svg height="6" viewBox="0 0 10 6" width="10" xmlns="http://www.w3.org/2000/svg"><path fill="rgb(0,0,0)" opacity=".6" d="m6.6168815 3-4.44908109-4.09883609c-.22373388-.20615371-.22373388-.54039492 0-.74654863s.58647818-.20615371.81021206 0l4.85418712 4.47211041c.22373388.20615371.22373388.54039491 0 .74654862l-4.85418712 4.47211041c-.22373388.20615371-.58647818.20615371-.81021206 0s-.22373388-.54039492 0-.74654863z" fill-rule="evenodd" transform="matrix(0 1 -1 0 8 -2)"/></svg>');

    // props
    display: block;
    width: 100%;
    font-family: inherit;
    vertical-align: middle;
    font-weight: normal;
    padding: var(--input-padding);
    font-size: var(--input-font-size);
    line-height: var(--input-line-height);
    border-radius: var(--input-border-radius);
    border-width: var(--input-border-width);
    border-style: var(--input-border-style);
    border-color: var(--input-border-color);
    color: var(--input-color);
    background-color: var(--input-background-color);
    box-shadow: var(--input-box-shadow);
    height: var(--input-height);

    &.disabled,
    &:disabled  {
       resize: none;
       opacity: 0.6;
       cursor: default;
    }
    &:focus {
        color: var(--input-focus-color);
        border-color: var(--input-focus-border-color);
        background-color: var(--input-focus-background-color);
        box-shadow: var(--input-focus-box-shadow);
    }
}
.input {
    &[type="radio"],
    &[type="checkbox"] {
        outline: 2px solid var(--input-outline-color);
    }
}
.input-large {
    --input-padding: 0.3em 0.4em;
}
.input-round {
    --input-border-radius: 99px;
    --input-padding: 0.3em 1em;
}
.input-light {
    @include placeholder(var(--placeholder-light));
}
// DarkTheme
@include dark-theme {
    select.input {
        --input-select-toggle: url('data:image/svg+xml;utf8,<svg height="6" viewBox="0 0 10 6" width="10" xmlns="http://www.w3.org/2000/svg"><path fill="rgb(255,255,255)" opacity=".7" d="m6.6168815 3-4.44908109-4.09883609c-.22373388-.20615371-.22373388-.54039492 0-.74654863s.58647818-.20615371.81021206 0l4.85418712 4.47211041c.22373388.20615371.22373388.54039491 0 .74654862l-4.85418712 4.47211041c-.22373388.20615371-.58647818.20615371-.81021206 0s-.22373388-.54039492 0-.74654863z" fill-rule="evenodd" transform="matrix(0 1 -1 0 8 -2)"/></svg>');
    }
    .input {
        @include placeholder(var(--placeholder-light));
    }
}

// Scales
$input-scale: scale(input);
@each $name, $value in $input-scale {
    @if $name == base {
        input,
        select,
        .input {
            --input-height: var(--input-#{$name});
        }
    }
    @else {
        input,
        select {
            &.input-#{$name} {
                --input-height: var(--input-#{$name});
            }
        }
    }
}

textarea,
textarea.input {
    --input-height: auto !important;
    resize: vertical;
    vertical-align: top;
}
select {
    -webkit-appearance: none;
    background-image: var(--input-select-toggle);
    background-repeat: no-repeat;
    background-position: right 0.65em center;
    padding-right: 28px !important;
}
select[multiple] {
    --input-height: auto !important;
    background-image: none !important;
}

// =File
input[type="file"] {
    --input-height: auto !important;
    width: auto;
    border: none;
    padding: 0;
    font-size: 13px;
    background: none;
    box-shadow: none;
    display: inline-block;
}

// =Radio & Checkbox
input[type="radio"],
input[type="checkbox"] {
    --input-height: auto !important;
    display: inline-block;
    width: auto;
    box-shadow: none;
    padding: 0;
}