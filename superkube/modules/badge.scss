// =Badge
.badge {
    @include generate-type(badge);
    @include generate-colors(badge);

    // vars
    --badge-font-weight: var(--font-weight-semibold);
    --badge-border-radius: 99px;
    --badge-padding: 1px 4px;
    --badge-border-width: 1px;
    --badge-border-style: solid;
    --badge-line-height: 16px;

    //props
    font-weight: var(--badge-font-weight);
    font-size: var(--badge-font-size);
    border-radius: var(--badge-border-radius);
    padding: var(--badge-padding);
    border-width: var(--badge-border-width);
    border-style: var(--badge-border-style);
    line-height: var(--badge-line-height);
    min-width: var(--badge-size);
    min-height: var(--badge-size);
    border-color: var(--badge-border-color);
    background-color: var(--badge-background-color);
    color: var(--badge-color);

    display: inline-flex;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    white-space: nowrap;
    text-decoration: none;
    height: auto;

    a {
        color: inherit;
        text-decoration: none;
    }
    a:hover {
        color: inherit;
        text-decoration: underline;
    }
}
a.badge:hover {
    opacity: 1;
    color: var(--badge-color);
    text-decoration: underline;
}
// Scales
$badge-scale: scale(badge);
@each $name, $value in $badge-scale {
    @if $name == base {
        .badge {
            --badge-size: #{$value};
        }
    }
    @else {
        .badge-#{$name} {
            --badge-size: #{$value};
        }
    }
}

// Dark theme
@include dark-theme {
    .badge {
        @include generate-dark-theme-colors(badge);
    }
}